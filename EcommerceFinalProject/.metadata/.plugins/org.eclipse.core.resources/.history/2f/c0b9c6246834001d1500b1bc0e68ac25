package com.example.demo.Controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.UserService.ProductsService;
import com.example.demo.entity.Products;

@RestController
@RequestMapping("/products")
public class ProductController {
	
	@Autowired
	private ProductsService proServ;
	
	@PostMapping("/addProducts")
	public Products addProduct(@RequestBody Products product) {
		
		return proServ.addProduct(product);
	}

	@PostMapping("/allProducts")
	 public ResponseEntity<List<Products>> getAllProducts(){
		 
		List<Products> pro=proServ.getAllPro();
		 if(pro.size()>=0) {
			 return ResponseEntity.status(HttpStatus.NOT_FOUND).build()	;	 }
	 
	else
		return ResponseEntity.of(Optional.of(pro));
}
	
	@GetMapping("/{id}")
    public Products fetchProductsById(@PathVariable("id")Integer productId) {
          
		Products pro=proServ.fetchProductsById(productId);
		if(pro==null) {
		
		}
        
    }
	@DeleteMapping("/{id}")
	public String deleteProductsById(@PathVariable("id")Integer productId, @RequestBody Products product) {
		proServ.deleteProductsById(productId);
		return "Product deleted";
	}
	
	@GetMapping("/name/{name}")
	public Products getProductsByName(@PathVariable("name") String ProductName) {
		
		return proServ.getProductsByName(ProductName);
	}
	
}
